/** Celestra * @version 5.7.4 min * @see https://github.com/Serrin/Celestra/ * @license MIT */
(function(window,document){
"use strict";
/** polyfills **/
if(!("sumPrecise" in Math)){Math.sumPrecise=function sumPrecise([...a]){if(a.length===0){return-0;}if(a.every((v)=>typeof v==="number")){let inf=a.indexOf(Infinity)>-1,negInf=a.indexOf(-Infinity)>-1;if(a.some((v)=>v!==v)||(inf&&negInf)){return NaN;}if(inf){return Infinity;}if(negInf){return -Infinity;}let hi=a.filter((v)=>(v===1e20||v===-1e20)).reduce((acc,v)=>acc+v,0);let lo=0.0,c=0.0;for(let item of a.filter((v)=>(v!==1e20&&v!==-1e20))){let y=item-c;let t=lo+y;c=(t-lo)-y;lo=t;}if((lo===0&&hi!==0)||(lo>0&&hi>0)||(lo<0&&hi<0)){return hi;}if((lo>0&&hi<0)||(lo<0&&hi>0)){return lo+hi;}return lo;}throw new TypeError("values passed to Math.sumPrecise must be numbers");};}
if(!("isError" in Error)){Error.isError=function isError(v){let s=Object.prototype.toString.call(v).slice(8,-1).toLowerCase();return(s==="error"||s==="domexception");};}
if(!("groupBy" in Object)){Object.defineProperty(Object,"groupBy",{"configurable":true,"writable":true,"enumerable":true,"value":function(items,callbackFn){"use strict";if(!(typeof callbackFn==="function")){throw new TypeError();}let r=Object.create(null),i=0;for(let item of items){let key=callbackFn(item,i++);if(!(Object.prototype.hasOwnProperty.call(r,key))){r[key]=[];}r[key].push(item);}return r;}});}
if(!("groupBy" in Map)){Object.defineProperty(Map,"groupBy",{"configurable":true,"writable":true,"enumerable":true,"value":function(items,callbackFn){"use strict";if(!(typeof callbackFn==="function")){throw new TypeError();}let r=new Map(),i=0;for(let item of items){let key=callbackFn(item,i++);if(!(r.has(key))){r.set(key,[]);}r.get(key).push(item);}return r;}});}
if(!Array.fromAsync){Array.fromAsync=async function fromAsync(arrayLike,mapfn,thisArg){const isConstructor=(v)=>(typeof v==="function"&&typeof v.prototype==="object");const errorMsg="Input length exceed the Number.MAX_SAFE_INTEGER.";if(Symbol.asyncIterator in arrayLike||Symbol.iterator in arrayLike){var r=isConstructor(this)?new this:Array(0),i=0;for await(const item of arrayLike){if(i>Number.MAX_SAFE_INTEGER){throw TypeError(errorMsg);}else{if(!mapfn){r[i]=item;}else{r[i]=await mapfn.call(thisArg,item,i);}}i++;}r.length=i;return r;}else{var l=arrayLike.length,r=isConstructor(this)?new this(l):Array(l),i=0;while(i<l){if(i>Number.MAX_SAFE_INTEGER){throw TypeError(errorMsg);}var item=await arrayLike[i];if(!mapfn){r[i]=item;}else{r[i]=await mapfn.call(thisArg,item,i);}i++;}r.length=i;return r;}};}
if(("crypto" in window)&&!("randomUUID" in window.crypto)){window.crypto.randomUUID=function randomUUID(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(c)=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16));};}
if(!Object.hasOwn){Object.defineProperty(Object,"hasOwn",{value:function(object,property){if(object==null){throw new TypeError("Cannot convert undefined or null to object");}return Object.prototype.hasOwnProperty.call(Object(object),property);},configurable:true,enumerable:false,writable:true});}
(function(global){if(!global.globalThis){if(Object.defineProperty){Object.defineProperty(global,"globalThis",{configurable:true,enumerable:false,value:global,writable:true});}else{global.globalThis=global;}}})(typeof this==="object"?this:Function("return this")());
if(!("toReversed" in Array.prototype)){Object.defineProperty(Array.prototype,"toReversed",{"configurable":true,"writable":true,"enumerable":false,"value":function(){"use strict";return this.slice().reverse();}});}
if(!("toSorted" in Array.prototype)){Object.defineProperty(Array.prototype,"toSorted",{"configurable":true,"writable":true,"enumerable":false,"value":function(cFn){"use strict";return this.slice().sort(cFn);}});}
if(!("toSpliced" in Array.prototype)){Object.defineProperty(Array.prototype,"toSpliced",{"configurable":true,"writable":true,"enumerable":false,"value":function(start,deleteCount,...items){var r=this.slice();r.splice(start,deleteCount,...items);return r;}});}
if(!("with" in Array.prototype)){Object.defineProperty(Array.prototype,"with",{"configurable":true,"writable":true,"enumerable":false,"value":function(i,v){"use strict";var r=this.slice();r[i]=v;return r;}});}
if(!("toReversed" in Uint8Array.prototype)){Object.defineProperty(Uint8Array.prototype,"toReversed",{"configurable":true,"writable":true,"enumerable":false,"value":function(){"use strict";return this.slice().reverse();}});}
if(!("toSorted" in Uint8Array.prototype)){Object.defineProperty(Uint8Array.prototype,"toSorted",{"configurable":true,"writable":true,"enumerable":false,"value":function(cFn){"use strict";return this.slice().sort(cFn);}});}
if(!("with" in Uint8Array.prototype)){Object.defineProperty(Uint8Array.prototype,"with",{"configurable":true,"writable":true,"enumerable":false,"value":function(i,v){"use strict";var r=this.slice();r[i]=v;return r;}});}
/** non-standard polyfills **/
if(!window.GeneratorFunction){window.GeneratorFunction=Object.getPrototypeOf(function*(){}).constructor;}
if(!window.AsyncFunction){window.AsyncFunction=Object.getPrototypeOf(async function(){}).constructor;}
if(!!window.BigInt&&!("toJSON" in BigInt.prototype)){Object.defineProperty(BigInt.prototype,"toJSON",{writable:true,enumerable:false,configurable:true,value:function toJSON(){return this.toString();}});}
/** Core API **/
const BASE16="0123456789ABCDEF";
const BASE32="234567ABCDEFGHIJKLMNOPQRSTUVWXYZ";
const BASE36="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
const BASE58="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
const BASE62="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
const WORDSAFEALPHABET="23456789CFGHJMPQRVWXcfghjmpqvwx";
function deleteOwnProperty(O,P,Throw=false){if(Object.hasOwn(O,P)){delete O[P];var r=Object.hasOwn(O,P);if(r&&Throw){throw new Error("Celestra.deleteOwnProperty(); error");}return +!r;}return -1;}
function toObject(O){if(O==null){throw new TypeError("celestra.toObject(); error: "+O);}return (["object","function"].includes(typeof O))?O:Object(O);}
function createPolyfillMethod(O,P,V){if(!(Object.hasOwn(O,P))){Object.defineProperty(O,P,{writable:true,enumerable:false,configurable:true,value:V});}return (O[P]===V);}
function createPolyfillProperty(O,P,V){if(!(Object.hasOwn(O,P))){Object.defineProperty(O,P,{writable:true,enumerable:true,configurable:true,value:V});}return (O[P]===V);}
function randomUUIDv7(){let ts=Date.now().toString(16).padStart(12,"0")+"7";let uuid=Array.from(([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(c)=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16)));let i=0,p=0;while(i<13){if(p===8||p===13){p++;}uuid[p]=ts[i];p++;i++;}return uuid.join("");}
const delay=(ms)=>new Promise(resolve=>setTimeout(resolve,ms));
const sleep=(ms)=>new Promise(resolve=>setTimeout(resolve,ms));
const randomBoolean=()=>(Math.random()>=0.5);
function b64Encode(s){return btoa(encodeURIComponent(String(s)).replace(/%([0-9A-F]{2})/g,function toSolidBytes(_match, p1){return String.fromCharCode("0x"+p1);}));}
function b64Decode(s){return decodeURIComponent(atob(String(s)).split("").map(function(c){return "%"+("00"+c.charCodeAt(0).toString(16)).slice(-2);}).join(""));}
function javaHash(s,hx=false){if(s!==undefined){s=""+s;}else{return 0;}var h=0,l=s.length,c="";if(l==0){return h;}for(var i=0;i<l;i++){c=s.charCodeAt(i);h=((h<<5)-h)+c;h=h&h;}if(hx){return h.toString(16);}return h;}
const getUrlVars=(str=location.search)=>[...new URLSearchParams(str).entries()].reduce(function(o,item){o[item[0]]=item[1];return o;},{});
const obj2string=(o)=>Object.keys(o).reduce((s,p)=>s+=encodeURIComponent(p)+"="+encodeURIComponent(o[p])+"&","").slice(0,-1);
function classof(v,type,Throw=false){var ot=Object.prototype.toString.call(v).slice(8,-1).toLowerCase();if(arguments.length<2){return ot;}if(!Throw){return ot===type.toLowerCase();}if(ot!==type.toLowerCase()){throw TypeError("Celestra classof(); type error: "+ot+" - "+type);}return true;}
function getType(v,type,Throw=false){var ot=Object.prototype.toString.call(v).slice(8,-1).toLowerCase();if(arguments.length<2){return ot;}if(!Throw){return ot===type.toLowerCase();}if(ot!==type.toLowerCase()){throw TypeError("Celestra getType(); type error: "+ot+" - "+type);}return true;}
function extend(...a){function _EXT(...as){if(typeof as[0]==="boolean"){var t=as[1],d=as[0],s=2;}else{var t=as[0],d=false,s=1;}for(var i=s,l=as.length,so;i<l;i++){so=as[i];if(so!=null){for(var p in so){if(Object.hasOwn(so,p)){if(typeof so[p]==="object"&&d){t[p]=_EXT(true,{},so[p]);}else{t[p]=so[p];}}}}}return t;}return _EXT(...a);}
const sizeIn=(O)=>Object.getOwnPropertyNames(O).length+Object.getOwnPropertySymbols(O).length;
function forIn(o,fn){Object.keys(o).forEach((v)=>fn(o[v],v,o));return o;}
const filterIn=(o,fn)=>Object.keys(o).reduce((r,p)=>{if(fn(o[p],p,o)){r[p]=o[p];}return r;},{});
function popIn(o,p){if(Object.hasOwn(o,p)){var v=o[p];delete o[p];return v;}}
const unBind=(fn)=>Function.prototype.call.bind(fn);
const bind=Function.prototype.call.bind(Function.prototype.bind);
const constant=(v)=>()=>v;
const identity=(v)=>v;
function noop(){}
const T=()=>true;
const F=()=>false;
function nanoid(size=21,alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-"){var r="",dl=alphabet.length,pos,i=size;while(i--){do{pos=crypto.getRandomValues(new Uint8Array(1))[0];}while(pos>=dl);r+=alphabet[pos];}return r;}
function timestampID(size=21,alphabet="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"){var r=Date.now().toString(36).padStart(10,"0")+"-";var dl=alphabet.length,pos,i=((size>11)?size:12)-11;while(i--){do{pos=crypto.getRandomValues(new Uint8Array(1))[0];}while(pos>=dl);r+=alphabet[pos];}return r;}
/** Assertion API **/
function assertType(v,rType,message){if(typeof rType!=="string"&&typeof rType!=="function"){throw new TypeError("[assertType] TypeError: "+rType+" is not a string of function");}if(typeof rType==="string"){if(rType==="object"?(v!==null&&typeof v!=="object"):typeof v!==rType){throw new TypeError("[assertType] Assertion failed: "+v+" is not a "+rType+(message?" - "+message:""));}}if(typeof rType==="function"){if(!(v instanceof rType)){throw new TypeError("[assertType] Assertion failed: "+v+" is not a "+((rType.name!=="")?rType.name:rType)+(message?" - "+message:""));}}return v;}
function assertNotType(v,rType,message){if(typeof rType!=="string"&&typeof rType!=="function"){throw new TypeError("[assertNotType] TypeError: "+rType+" is not a string of function");}if(typeof rType==="string"){if(rType==="object"?(v!==null&&typeof v==="object"):typeof v===rType){throw new TypeError("[assertNotType] Assertion failed: "+v+" is a "+rType+(message?" - "+message:""));}}if(typeof rType==="function"){if(v instanceof rType){throw new TypeError("[assertNotType] Assertion failed: "+v+" is a "+((rType.name!=="")?rType.name:rType)+(message?" - "+message:""));}}return v;}
function assert(c,message){if(!c){throw new Error("[assert] Assertion failed"+(message?": "+message:""));}return true;}
function assertTrue(c,message){if(!c){throw new Error("[assertTrue] Assertion failed"+(message?": "+message:""));}return true;}
function assertFalse(c,message){if(c){throw new Error("[assertFalse] Assertion failed" +(message?": "+message:""));}return true;}
function assertEqual(x,y,message){if(!(x==y||(x!==x&&y!==y))){throw new Error("[assertEqual] Assertion failed"+(message?": "+message:""));}return true;}
function assertStrictEqual(x,y,message){if(!((x===y)?(x!==0||1/x===1/y):(x!==x&&y!==y))){throw new Error("[assertStrictEqual] Assertion failed"+(message?": "+message:""));}return true;}
function assertNotEqual(x,y,message){if(x==y||(x!==x&&y!==y)){throw new Error("[assertNotEqual] Assertion failed"+(message?": "+message:""));}return true;}
function assertNotStrictEqual(x,y,message){if((x===y)?(x!==0||1/x ===1/y):(x!==x&&y!==y)){throw new Error("[assertNotStrictEqual] Assertion failed" +(message?": "+message:""));}return true;}
function assertDeepEqual(x,y,message){ function _isDeepEqual(x,y){ const _deepType=(x)=>((x===null)?"null" :(x!==x)?"NaN" :(typeof x));const _isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));const _isObject=(x)=>(x!=null&&typeof x==="object");const _isSameInstance=(x,y,Class)=>(x instanceof Class)&&(y instanceof Class);const _classof=(x)=>Object.prototype.toString.call(x).slice(8,-1).toLowerCase();const _ownKeys=(x)=>Object.getOwnPropertyNames(x).concat(Object.getOwnPropertySymbols(x));const _isEqual=(x,y)=>(x==y||(x!==x&&y!==y));if(_isEqual(x,y)){return true;}if(_isObject(x)&&_isObject(y)){if(_isEqual(x,y)){return true;}if(_isSameInstance(x,y,WeakMap)||_isSameInstance(x,y,WeakSet)){ return _isEqual(x,y);}if(_isSameInstance(x,y,Number)||_isSameInstance(x,y,Boolean)||_isSameInstance(x,y,String)||_isSameInstance(x,y,BigInt)){ return _isEqual(x.valueOf(),y.valueOf());}if(Array.isArray(x)&&Array.isArray(y)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isDeepEqual(v,y[i]));}if( _isSameInstance(x,y,Int8Array)||_isSameInstance(x,y,Uint8Array)||_isSameInstance(x,y,Uint8ClampedArray)||_isSameInstance(x,y,Int16Array)||_isSameInstance(x,y,Uint16Array)||_isSameInstance(x,y,Int32Array)||_isSameInstance(x,y,Uint32Array)||("Float16Array" in window? _isSameInstance(x,y,Float16Array):false)||_isSameInstance(x,y,Float32Array)||_isSameInstance(x,y,Float64Array)||_isSameInstance(x,y,BigInt64Array)||_isSameInstance(x,y,BigUint64Array)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isEqual(v,y[i]));}if(_isSameInstance(x,y,ArrayBuffer)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}let xTA=new Int8Array(x);let yTA=new Int8Array(y);return xTA.every((v,i)=>_isEqual(v,yTA[i]));}if(_isSameInstance(x,y,DataView)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}for(let i=0;i < x.byteLength;i++){if(!_isEqual(x.getUint8(i),y.getUint8(i))){return false;}}return true;}if(_isSameInstance(x,y,Map)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let key of x.keys()){if(!y.has(key)){return false;}if(!_isDeepEqual(x.get(key),y.get(key))){return false;}}return true;}if(_isSameInstance(x,y,Set)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let item of x){if(!y.has(item)){return false;}}return true;}if(_isSameInstance(x,y,RegExp)){ return _isEqual(x.lastIndex,y.lastIndex)&&_isEqual(x.flags,y.flags)&&_isEqual(x.source,y.source);}if(_isSameInstance(x,y,Error)){ return _isDeepEqual( Object.getOwnPropertyNames(x).reduce((acc,prop)=>{acc[prop]=x[prop];return acc;},{}), Object.getOwnPropertyNames(y).reduce((acc,prop)=>{acc[prop]=y[prop];return acc;},{}),);}if(_isSameInstance(x,y,Date)){return _isEqual(+x,+y);}let xKeys=_ownKeys(x);let yKeys=_ownKeys(y);if(xKeys.length!==yKeys.length){return false;}if(xKeys.length===0){return true;}return xKeys.every((key)=>_isDeepEqual(x[key],y[key]));}return false;}if(!_isDeepEqual(x,y)){ throw new Error("[assertDeepEqual] Assertion failed" +(message?": "+message :""));}return true;}function assertNotDeepStrictEqual(x,y,message){function _isDeepStrictEqual(x,y){const _deepType=(x)=>((x===null)?"null" :(x!==x)?"NaN" :(typeof x));const _isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));const _isObject=(x)=>(x!=null&&typeof x==="object");const _isSameInstance=(x,y,Class)=>(x instanceof Class)&&(y instanceof Class);const _classof=(x)=>Object.prototype.toString.call(x).slice(8,-1).toLowerCase();const _ownKeys=(x)=>Object.getOwnPropertyNames(x).concat(Object.getOwnPropertySymbols(x));const _isEqual=(x,y)=>Object.is(x,y);if(_isEqual(x,y)){return true;}if(_isObject(x)&&_isPrimitive(y)&&_classof(x)===typeof y){return _isEqual(x.valueOf(),y);}if(_isPrimitive(x)&&_isObject(y)&&typeof x===_classof(y)){return _isEqual(x,y.valueOf());}if(_deepType(x)!==_deepType(y)){return false;}if(_isObject(x)&&_isObject(y)){if(_isEqual(x,y)){return true;}if(Object.getPrototypeOf(x).constructor!==Object.getPrototypeOf(y).constructor){return false;}if(_isSameInstance(x,y,WeakMap)||_isSameInstance(x,y,WeakSet)){return _isEqual(x,y);}if(_isSameInstance(x,y,Number)||_isSameInstance(x,y,Boolean)||_isSameInstance(x,y,String)||_isSameInstance(x,y,BigInt)){return _isEqual(x.valueOf(),y.valueOf());}if(Array.isArray(x)&&Array.isArray(y)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isDeepStrictEqual(v,y[i]));}if( _isSameInstance(x,y,Int8Array)||_isSameInstance(x,y,Uint8Array)||_isSameInstance(x,y,Uint8ClampedArray)||_isSameInstance(x,y,Int16Array)||_isSameInstance(x,y,Uint16Array)||_isSameInstance(x,y,Int32Array)||_isSameInstance(x,y,Uint32Array)||("Float16Array" in window?_isSameInstance(x,y,Float16Array):false)||_isSameInstance(x,y,Float32Array)||_isSameInstance(x,y,Float64Array)||_isSameInstance(x,y,BigInt64Array)||_isSameInstance(x,y,BigUint64Array)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isEqual(v,y[i]));}if(_isSameInstance(x,y,ArrayBuffer)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}let xTA=new Int8Array(x);let yTA=new Int8Array(y);return xTA.every((v,i)=>_isEqual(v,yTA[i]));}if(_isSameInstance(x,y,DataView)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}for(let i=0;i < x.byteLength;i++){if(!_isEqual(x.getUint8(i),y.getUint8(i))){return false;}}return true;}if(_isSameInstance(x,y,Map)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let key of x.keys()){if(!y.has(key)){return false;}if(!_isDeepStrictEqual(x.get(key),y.get(key))){return false;}}return true;}if(_isSameInstance(x,y,Set)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let item of x){if(!y.has(item)){return false;}}return true;}if(_isSameInstance(x,y,RegExp)){return _isEqual(x.lastIndex,y.lastIndex)&&_isEqual(x.flags,y.flags)&&_isEqual(x.source,y.source);}if(_isSameInstance(x,y,Error)){return _isDeepStrictEqual( Object.getOwnPropertyNames(x).reduce((acc,prop)=>{acc[prop]=x[prop];return acc;},{}),Object.getOwnPropertyNames(y).reduce((acc,prop)=>{acc[prop]=y[prop];return acc;},{}),);}if(_isSameInstance(x,y,Date)){return _isEqual(+x,+y);}let xKeys=_ownKeys(x);let yKeys=_ownKeys(y);if(xKeys.length!==yKeys.length){return false;}if(xKeys.length===0){return true;}return xKeys.every((key)=>_isDeepStrictEqual(x[key],y[key]));}return false;}if(_isDeepStrictEqual(x,y)){throw new Error("[assertNotDeepStrictEqual] Assertion failed" +(message?": "+message :""));}return true;}
function assertNotDeepEqual(x,y,message){ function _isDeepEqual(x,y){ const _deepType=(x)=>((x===null)?"null" :(x!==x)?"NaN" :(typeof x));const _isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));const _isObject=(x)=>(x!=null&&typeof x==="object");const _isSameInstance=(x,y,Class)=>(x instanceof Class)&&(y instanceof Class);const _classof=(x)=>Object.prototype.toString.call(x).slice(8,-1).toLowerCase();const _ownKeys=(x)=>Object.getOwnPropertyNames(x).concat(Object.getOwnPropertySymbols(x));const _isEqual=(x,y)=>(x==y||(x!==x&&y!==y));if(_isEqual(x,y)){return true;}if(_isObject(x)&&_isObject(y)){if(_isEqual(x,y)){return true;}if(_isSameInstance(x,y,WeakMap)||_isSameInstance(x,y,WeakSet)){ return _isEqual(x,y);}if(_isSameInstance(x,y,Number)||_isSameInstance(x,y,Boolean)||_isSameInstance(x,y,String)||_isSameInstance(x,y,BigInt)){ return _isEqual(x.valueOf(),y.valueOf());}if(Array.isArray(x)&&Array.isArray(y)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isDeepEqual(v,y[i]));}if( _isSameInstance(x,y,Int8Array)||_isSameInstance(x,y,Uint8Array)||_isSameInstance(x,y,Uint8ClampedArray)||_isSameInstance(x,y,Int16Array)||_isSameInstance(x,y,Uint16Array)||_isSameInstance(x,y,Int32Array)||_isSameInstance(x,y,Uint32Array)||("Float16Array" in window? _isSameInstance(x,y,Float16Array):false)||_isSameInstance(x,y,Float32Array)||_isSameInstance(x,y,Float64Array)||_isSameInstance(x,y,BigInt64Array)||_isSameInstance(x,y,BigUint64Array)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isEqual(v,y[i]));}if(_isSameInstance(x,y,ArrayBuffer)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}let xTA=new Int8Array(x);let yTA=new Int8Array(y);return xTA.every((v,i)=>_isEqual(v,yTA[i]));}if(_isSameInstance(x,y,DataView)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}for(let i=0;i < x.byteLength;i++){if(!_isEqual(x.getUint8(i),y.getUint8(i))){return false;}}return true;}if(_isSameInstance(x,y,Map)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let key of x.keys()){if(!y.has(key)){return false;}if(!_isDeepEqual(x.get(key),y.get(key))){return false;}}return true;}if(_isSameInstance(x,y,Set)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let item of x){if(!y.has(item)){return false;}}return true;}if(_isSameInstance(x,y,RegExp)){ return _isEqual(x.lastIndex,y.lastIndex)&&_isEqual(x.flags,y.flags)&&_isEqual(x.source,y.source);}if(_isSameInstance(x,y,Error)){ return _isDeepEqual( Object.getOwnPropertyNames(x).reduce((acc,prop)=>{acc[prop]=x[prop];return acc;},{}), Object.getOwnPropertyNames(y).reduce((acc,prop)=>{acc[prop]=y[prop];return acc;},{}),);}if(_isSameInstance(x,y,Date)){return _isEqual(+x,+y);}let xKeys=_ownKeys(x);let yKeys=_ownKeys(y);if(xKeys.length!==yKeys.length){return false;}if(xKeys.length===0){return true;}return xKeys.every((key)=>_isDeepEqual(x[key],y[key]));}return false;}if(_isDeepEqual(x,y)){ throw new Error("[assertNotDeepEqual] Assertion failed" +(message?": "+message :""));}return true;}
function assertDeepStrictEqual(x,y,message){function _isDeepStrictEqual(x,y){const _deepType=(x)=>((x===null)?"null" :(x!==x)?"NaN" :(typeof x));const _isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));const _isObject=(x)=>(x!=null&&typeof x==="object");const _isSameInstance=(x,y,Class)=>(x instanceof Class)&&(y instanceof Class);const _classof=(x)=>Object.prototype.toString.call(x).slice(8,-1).toLowerCase();const _ownKeys=(x)=>Object.getOwnPropertyNames(x).concat(Object.getOwnPropertySymbols(x));const _isEqual=(x,y)=>Object.is(x,y);if(_isEqual(x,y)){return true;}if(_isObject(x)&&_isPrimitive(y)&&_classof(x)===typeof y){return _isEqual(x.valueOf(),y);}if(_isPrimitive(x)&&_isObject(y)&&typeof x===_classof(y)){return _isEqual(x,y.valueOf());}if(_deepType(x)!==_deepType(y)){return false;}if(_isObject(x)&&_isObject(y)){if(_isEqual(x,y)){return true;}if(Object.getPrototypeOf(x).constructor!==Object.getPrototypeOf(y).constructor){return false;}if(_isSameInstance(x,y,WeakMap)||_isSameInstance(x,y,WeakSet)){return _isEqual(x,y);}if(_isSameInstance(x,y,Number)||_isSameInstance(x,y,Boolean)||_isSameInstance(x,y,String)||_isSameInstance(x,y,BigInt)){return _isEqual(x.valueOf(),y.valueOf());}if(Array.isArray(x)&&Array.isArray(y)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isDeepStrictEqual(v,y[i]));}if( _isSameInstance(x,y,Int8Array)||_isSameInstance(x,y,Uint8Array)||_isSameInstance(x,y,Uint8ClampedArray)||_isSameInstance(x,y,Int16Array)||_isSameInstance(x,y,Uint16Array)||_isSameInstance(x,y,Int32Array)||_isSameInstance(x,y,Uint32Array)||("Float16Array" in window?_isSameInstance(x,y,Float16Array):false)||_isSameInstance(x,y,Float32Array)||_isSameInstance(x,y,Float64Array)||_isSameInstance(x,y,BigInt64Array)||_isSameInstance(x,y,BigUint64Array)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isEqual(v,y[i]));}if(_isSameInstance(x,y,ArrayBuffer)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}let xTA=new Int8Array(x);let yTA=new Int8Array(y);return xTA.every((v,i)=>_isEqual(v,yTA[i]));}if(_isSameInstance(x,y,DataView)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}for(let i=0;i < x.byteLength;i++){if(!_isEqual(x.getUint8(i),y.getUint8(i))){return false;}}return true;}if(_isSameInstance(x,y,Map)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let key of x.keys()){if(!y.has(key)){return false;}if(!_isDeepStrictEqual(x.get(key),y.get(key))){return false;}}return true;}if(_isSameInstance(x,y,Set)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let item of x){if(!y.has(item)){return false;}}return true;}if(_isSameInstance(x,y,RegExp)){return _isEqual(x.lastIndex,y.lastIndex)&&_isEqual(x.flags,y.flags)&&_isEqual(x.source,y.source);}if(_isSameInstance(x,y,Error)){return _isDeepStrictEqual( Object.getOwnPropertyNames(x).reduce((acc,prop)=>{acc[prop]=x[prop];return acc;},{}),Object.getOwnPropertyNames(y).reduce((acc,prop)=>{acc[prop]=y[prop];return acc;},{}),);}if(_isSameInstance(x,y,Date)){return _isEqual(+x,+y);}let xKeys=_ownKeys(x);let yKeys=_ownKeys(y);if(xKeys.length!==yKeys.length){return false;}if(xKeys.length===0){return true;}return xKeys.every((key)=>_isDeepStrictEqual(x[key],y[key]));}return false;}if(!_isDeepStrictEqual(x,y)){throw new Error("[assertDeepStrictEqual] Assertion failed" +(message?": "+message :""));}return true;}
/** String API **/
function strTruncate(str,newLen,omission=""){str=String(str);omission = String(omission);var strUC=Array.from(str);if(newLen>=strUC.length){return str;}return strUC.slice(0,newLen-Array.from(omission).length).join("")+omission;}
const strPropercase=(s)=>String(s).split(" ").map(function(v){var a=Array.from(v).map((c)=>c.toLowerCase());if(a.length){a[0]=a[0].toUpperCase();}return a.join("");}).join(" ");
const strTitlecase=(s)=>String(s).split(" ").map(function(v){var a=Array.from(v).map((c)=>c.toLowerCase());if(a.length){a[0]=a[0].toUpperCase();}return a.join("");}).join(" ");
function strCapitalize(s){var a=[...String(s).toLowerCase()];if(a.length){a[0]=a[0].toUpperCase();}return a.join("");}
function strUpFirst(s){var a=[...String(s)];if(a.length){a[0]=a[0].toUpperCase();}return a.join("");}
function strDownFirst(s){var a=[...String(s)];if(a.length){a[0]=a[0].toLowerCase();}return a.join("");}
const strReverse=(s)=>Array.from(String(s)).reverse().join("");
const strCodePoints=(s)=>Array.from(String(s),(v)=>v.codePointAt(0));
const strFromCodePoints=([...a])=>String.fromCodePoint(...a);
function strAt(s,i,nC){var a=Array.from(String(s));if(nC==null){return a.at(i)||"";}i=i<0?a.length+i:i;if(i>a.length){return a.join("");}a[i]=nC;return a.join("");}
const strSplice=(s,i,c,...add)=>Array.from(s).toSpliced(i,c,add.join("")).join("");
const strHTMLRemoveTags=(s)=>String(s).replace(/<[^>]*>/g," ").replace(/\s{2,}/g," ").trim();
const strHTMLEscape=(s)=>String(s).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;");
const strHTMLUnEscape=(s)=>String(s).replace(/&amp;/g,"&").replace(/&#38;/g,"&").replace(/&lt;/g,"<").replace(/&#60;/g,"<").replace(/&gt;/g,">").replace(/&#62;/g,">").replace(/&quot;/g,'"').replace(/&#34;/g,'"').replace(/&apos;/g,"'").replace(/&#39;/g,"'");
/** DOM API **/
const qsa=(s,c=document)=>Array.from(c.querySelectorAll(s));
const qs=(s,c=document)=>c.querySelector(s);
function domReady(fn){if(document.readyState!=="loading"){fn();}else{document.addEventListener("DOMContentLoaded",function(_event){fn();});}}
function domCreate(t,ps,iH){if(arguments.length===1&& typeof t==="object"){var obj=t;t=obj.elementType;ps={};for(var p in obj){if(p!=="elementType"){ps[p]=obj[p];}}}var el=document.createElement(t);if(ps){for(var p in ps){if(p!=="style"||typeof ps[p]==="string"){el[p]=ps[p];}else{Object.assign(el.style,ps[p]);}}}if(iH){el.innerHTML=iH;}return el;}
function domToElement(s){var e=document.createElement("div");e.innerHTML=s;return e.firstElementChild;}
const domGetCSS=(e,p)=>(p?window.getComputedStyle(e,null)[p]:window.getComputedStyle(e,null));
function domSetCSS(e,n,v){if(typeof n==="string"){e.style[n]=v;}else if(typeof n==="object"){Object.keys(n).forEach((p)=>(e.style[p]=n[p]));}}
function domFadeIn(e,dur,d){var s=e.style,step=25/(dur||500);s.opacity=(s.opacity||0);s.display=(d||"");(function fade(){(s.opacity=parseFloat(s.opacity)+step)>1?s.opacity=1:setTimeout(fade,25);})();}
function domFadeOut(e,dur){var s=e.style,step=25/(dur||500);s.opacity=(s.opacity||1);(function fade(){(s.opacity-=step)<0?s.display="none":setTimeout(fade,25);})();}
function domFadeToggle(e,dur,d=""){if(window.getComputedStyle(e,null).display==="none"){var s=e.style,step=25/(dur||500);s.opacity=(s.opacity||0);s.display=(d||"");(function fade(){(s.opacity=parseFloat(s.opacity)+step)>1?s.opacity=1:setTimeout(fade,25);})();}else{var s=e.style,step=25/(dur||500);s.opacity=(s.opacity||1);(function fade(){(s.opacity-=step)<0?s.display="none":setTimeout(fade,25);})();}}
const domHide=(e)=>e.style.display="none";
const domShow=(e,d="")=>e.style.display=d;
function domToggle(e,d=""){if(window.getComputedStyle(e,null).display==="none"){e.style.display=d;}else{e.style.display="none";}}
const domIsHidden=(e)=>(window.getComputedStyle(e,null).display==="none");
const domSiblings=(el)=>Array.prototype.filter.call(el.parentNode.children,(e)=>(e!==el));
const domSiblingsPrev=(el)=>Array.prototype.slice.call(el.parentNode.children,0,Array.prototype.indexOf.call(el.parentNode.children,el));
const domSiblingsLeft=(el)=>Array.prototype.slice.call(el.parentNode.children,0,Array.prototype.indexOf.call(el.parentNode.children,el));
const domSiblingsNext=(el)=>Array.prototype.slice.call(el.parentNode.children,Array.prototype.indexOf.call(el.parentNode.children,el)+1,el.parentNode.children.length);
const domSiblingsRight=(el)=>Array.prototype.slice.call(el.parentNode.children,Array.prototype.indexOf.call(el.parentNode.children,el)+1,el.parentNode.children.length);
function importScript(...a){for(let item of a){let scr=document.createElement("script");scr.type="text\/javascript";scr.src=item;scr.onerror=function(e){throw new URIError("Loading failed for the script with source "+e.target.src);};(document.head||document.getElementsByTagName("head")[0]).appendChild(scr);}}
function importStyle(...a){for(let item of a){let stl=document.createElement("link");stl.rel="stylesheet";stl.type="text\/css";stl.href=item;stl.onerror=function(e){throw new URIError("Loading failed for the style with source "+e.target.href);};(document.head||document.getElementsByTagName("head")[0]).appendChild(stl);}}
function form2array(f){var fld,a=[];if(typeof f==="object"&&f.nodeName.toLowerCase()==="form"){for(var i=0,len=f.elements.length;i<len;i++){fld=f.elements[i];if(fld.name&&!fld.disabled&&fld.type!=="file"&&fld.type!=="reset"&&fld.type!=="submit"&&fld.type!=="button"){if(fld.type==="select-multiple"){for(var j=0,l=f.elements[i].options.length;j<l;j++){if(fld.options[j].selected){a.push({"name":encodeURIComponent(fld.name),"value":encodeURIComponent(fld.options[j].value)});}}}else if((fld.type!=="checkbox"&&fld.type!=="radio")||fld.checked){a.push({"name": encodeURIComponent(fld.name),"value":encodeURIComponent(fld.value)});}}}}return a;}
function form2string(f){var fld,a=[];if(typeof f==="object"&&f.nodeName.toLowerCase()==="form"){for(var i=0,len=f.elements.length;i<len;i++){fld=f.elements[i];if(fld.name&&!fld.disabled&&fld.type!=="file"&&fld.type!=="reset"&&fld.type!=="submit"&&fld.type!=="button"){if(fld.type==="select-multiple"){for(var j=0,l=f.elements[i].options.length;j<l;j++){if(fld.options[j].selected){a.push(encodeURIComponent(fld.name)+"="+encodeURIComponent(fld.options[j].value));}}}else if((fld.type!=="checkbox"&&fld.type!=="radio")||fld.checked){a.push(encodeURIComponent(fld.name)+"="+encodeURIComponent(fld.value));}}}}return a.join("&").replace(/%20/g,"+");}
const getDoNotTrack=()=>[navigator.doNotTrack,window.doNotTrack,navigator.msDoNotTrack].some((e)=>(e===true||e===1||e==="1"));
function getLocation(s,e){if(!e){var e=function(){};}function getE(error){e("ERROR("+error.code+"): "+error.message);}if(navigator.geolocation){navigator.geolocation.getCurrentPosition(s,getE);}else{getE("Geolocation is not supported in this browser.");}}
function createFile(fln,c,dt){var l=arguments.length;if(l>1){if(l===2){dt="text/plain";}var b=new Blob([c],{type:dt});if(window.navigator.msSaveOrOpenBlob){window.navigator.msSaveBlob(b,fln);}else{var e=window.document.createElement("a");e.href=window.URL.createObjectURL(b);e.download=fln;document.body.appendChild(e);e.click();document.body.removeChild(e);window.URL.revokeObjectURL(e.href);}}else{throw "Celestra createFile error: too few parameters.";}}
const getFullscreen=()=>(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement||undefined);
function setFullscreenOn(s){if(typeof s==="string"){var e=document.querySelector(s);}else if(typeof s==="object"){var e=s;}if(e.requestFullscreen){e.requestFullscreen();}else if(e.mozRequestFullScreen){e.mozRequestFullScreen();}else if(e.webkitRequestFullscreen){e.webkitRequestFullscreen();}else if(e.msRequestFullscreen){e.msRequestFullscreen();}}
function setFullscreenOff(){if(document.exitFullscreen){document.exitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}}
const domGetCSSVar=(n)=>getComputedStyle(document.documentElement).getPropertyValue(n[0]==="-"?n:"--"+n);
const domSetCSSVar=(n,v)=>document.documentElement.style.setProperty((n[0]==="-"?n:"--"+n),v);
const domScrollToTop=()=>window.scrollTo(0,0);
const domScrollToBottom=()=>window.scrollTo(0,document.body.scrollHeight);
const domScrollToElement=(e,top=true)=>e.scrollIntoView(top);
const domClear=(el)=>Array.from(el.children).forEach((item)=>item.remove());
/** AJAX API **/
function getText(url,success){if(typeof url!=="string"){throw new TypeError("Celestra ajax error:The url parameter have to be a string.");}if(typeof success!=="function"){throw new TypeError("Celestra ajax error:The success parameter have to be a function.");}var xhr=new XMLHttpRequest();xhr.onerror=(e)=>console.log("Celestra ajax GET error:"+JSON.stringify(e));xhr.open("GET",url,true);xhr.onreadystatechange=function(){if(this.readyState===4&&this.status===200){success(this.responseText);}};xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.send();}
function getJson(url,success){if(typeof url!=="string"){throw new TypeError("Celestra ajax error:The url parameter have to be a string.");}if(typeof success!=="function"){throw new TypeError("Celestra ajax error:The success parameter have to be a function.");}var xhr=new XMLHttpRequest();xhr.onerror=(e)=>console.log("Celestra ajax GET error:"+JSON.stringify(e));xhr.open("GET",url,true);xhr.onreadystatechange=function(){if(this.readyState===4&&this.status===200){success(JSON.parse(this.responseText));}};xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");xhr.send();}
function ajax(o){if(typeof o.url!=="string"){throw new TypeError("Celestra ajax error: The url property have to be a string.");}if(typeof o.success!=="function"){throw new TypeError("Celestra ajax error: The success property have to be a function.");}if(o.error===undefined){o.error=(e)=>console.log("Celestra ajax GET error: "+JSON.stringify(e));}if(typeof o.error!=="function"){throw new TypeError("Celestra ajax error: The error property have to be a function or undefined.");}if(!o.queryType){o.queryType="ajax";}else{o.queryType=o.queryType.toLowerCase();}if(!o.type){o.type="get";}else{o.type=o.type.toLowerCase();}if(o.type==="get"){var typeStr="GET";}else if(o.type==="post"){var typeStr="POST";}else{throw "Celestra ajax error: The type property have to be \"get\" or \"post\".";}if(!o.format){o.format="text";}else{o.format=o.format.toLowerCase();if(!(["text","json","xml"].includes(o.format))){throw "Celestra ajax error: The format property have to be \"text\" or \"json\" or \"xml\".";}}var xhr;if(o.queryType==="ajax"){xhr=new XMLHttpRequest();}else if(o.queryType==="cors"){xhr=new XMLHttpRequest();if(!("withCredentials" in xhr)){xhr=new XDomainRequest();}}else{throw "Celestra ajax error: The querytype property have to be \"ajax\" or \"cors\".";}if(typeof o.user==="string"&&typeof o.password==="string"){xhr.open(typeStr, o.url, true, o.user, o.password);}else{xhr.open(typeStr,o.url,true);}if(o.queryType==="ajax"){xhr.onreadystatechange=function(){if(this.readyState===4&&this.status===200){switch(o.format.toLowerCase()){case"text":o.success(this.responseText);break;case"json":o.success(JSON.parse(this.responseText));break;case"xml":o.success(this.responseXML);break;default:o.success(this.responseText);}}};xhr.setRequestHeader("X-Requested-With","XMLHttpRequest");if(o.typeStr==="POST") {xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");}}else if(o.queryType==="cors"){xhr.onload=function(request){switch(o.format.toLowerCase()){case"text":o.success(request.target.responseText||request.currentTarget.response);break;case"json":o.success(JSON.parse(request.target.responseText||request.currentTarget.response));break;case"xml": o.success(request.target.responseXML||request.currentTarget.responseXML);break;default: o.success(request.target.responseText||request.currentTarget.response);}};}if (typeof o.error==="function"){xhr.onerror=o.error;}if(typeStr==="GET"){xhr.send();}else if(typeStr==="POST"){xhr.send(encodeURI(o.data));}}
/** Type API **/
function toPrimitiveValue(O){if(O==null||typeof O!=="object"){return O;}var ot=Object.prototype.toString.call(O).slice(8,-1);if(["Boolean","BigInt","Number","String"].includes(ot)){return window[ot](O);}return O;}
const isPropertyKey=(v)=>(typeof v==="string"||typeof v==="symbol");
const toPropertyKey=(v)=>(typeof v==="symbol"?v:String(v));
const isIndex=(v)=>(Number.isSafeInteger(v)&&v>=0&&1/v!==1/-0);
const isLength=(v)=>(Number.isSafeInteger(v)&&v>=0&&1/v!==1/-0);
function toIndex(v){v=((v=Math.trunc(+v))!==v||v===0)?0:v;if(v<0||v>(Math.pow(2,53)-1)){throw new RangeError("toIndex(); RangeError: "+v);}return v;}
function toLength(v){v=((v=Math.trunc(+v))!==v||v===0)?0:v;return Math.min(Math.max(v,0),Math.pow(2,53)-1);}
const type=(v)=>((v===null)?"null":(typeof v));
const isSameClass=(x,y)=>(Object.prototype.toString.call(x)===Object.prototype.toString.call(y));
const isSameType=(x,y)=>((x==null||y==null)?(x===y):(typeof x===typeof y));
const isSameInstance=(x,y,Contructor)=>(x instanceof Contructor&&y instanceof Contructor);
function isCoercedObject(O){if(O!=null&&typeof O==="object"){if(O instanceof Number){return Number;}if(O instanceof BigInt){return BigInt;}if(O instanceof String){return String;}if(O instanceof Boolean){return Boolean;}}return false;}
function isDeepStrictEqual(x,y){ const _deepType=(x)=>((x===null)?"null" :(x!==x)?"NaN" :(typeof x));const _isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));const _isObject=(x)=>(x!=null&&typeof x==="object");const _isSameInstance=(x,y,Class)=>(x instanceof Class)&&(y instanceof Class);const _classof=(x)=>Object.prototype.toString.call(x).slice(8,-1).toLowerCase();const _ownKeys=(x)=>Object.getOwnPropertyNames(x).concat(Object.getOwnPropertySymbols(x));const _isEqual=(x,y)=>Object.is(x,y);if(_isEqual(x,y)){return true;}if(_isObject(x)&&_isPrimitive(y)&&_classof(x)===typeof y){ return _isEqual(x.valueOf(),y);}if(_isPrimitive(x)&&_isObject(y)&&typeof x===_classof(y)){ return _isEqual(x,y.valueOf());}if(_deepType(x)!==_deepType(y)){return false;}if(_isObject(x)&&_isObject(y)){if(_isEqual(x,y)){return true;}if(Object.getPrototypeOf(x).constructor!== Object.getPrototypeOf(y).constructor){ return false;}if(_isSameInstance(x,y,WeakMap)||_isSameInstance(x,y,WeakSet)){ return _isEqual(x,y);}if(_isSameInstance(x,y,Number)||_isSameInstance(x,y,Boolean)||_isSameInstance(x,y,String)||_isSameInstance(x,y,BigInt)){ return _isEqual(x.valueOf(),y.valueOf());}if(Array.isArray(x)&&Array.isArray(y)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>isDeepStrictEqual(v,y[i]));}if( _isSameInstance(x,y,Int8Array)||_isSameInstance(x,y,Uint8Array)||_isSameInstance(x,y,Uint8ClampedArray)||_isSameInstance(x,y,Int16Array)||_isSameInstance(x,y,Uint16Array)||_isSameInstance(x,y,Int32Array)||_isSameInstance(x,y,Uint32Array)||("Float16Array" in window? _isSameInstance(x,y,Float16Array):false)||_isSameInstance(x,y,Float32Array)||_isSameInstance(x,y,Float64Array)||_isSameInstance(x,y,BigInt64Array)||_isSameInstance(x,y,BigUint64Array)){if(x.length!==y.length){return false;}if(x.length===0){return true;}return x.every((v,i)=>_isEqual(v,y[i]));}if(_isSameInstance(x,y,ArrayBuffer)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}let xTA=new Int8Array(x);let yTA=new Int8Array(y);return xTA.every((v,i)=>_isEqual(v,yTA[i]));}if(_isSameInstance(x,y,DataView)){if(x.byteLength!==y.byteLength){return false;}if(x.byteLength===0){return true;}for(let i=0;i < x.byteLength;i++){if(!_isEqual(x.getUint8(i),y.getUint8(i))){return false;}}return true;}if(_isSameInstance(x,y,Map)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let key of x.keys()){if(!y.has(key)){return false;}if(!isDeepStrictEqual(x.get(key),y.get(key))){return false;}}return true;}if(_isSameInstance(x,y,Set)){if(x.size!==y.size){return false;}if(x.size===0){return true;}for(let item of x){if(!y.has(item)){return false;}}return true;}if(_isSameInstance(x,y,RegExp)){ return _isEqual(x.lastIndex,y.lastIndex)&&_isEqual(x.flags,y.flags)&&_isEqual(x.source,y.source);}if(_isSameInstance(x,y,Error)){ return isDeepStrictEqual( Object.getOwnPropertyNames(x).reduce((acc,prop)=>{acc[prop]=x[prop];return acc;},{}), Object.getOwnPropertyNames(y).reduce((acc,prop)=>{acc[prop]=y[prop];return acc;},{}),);}if(_isSameInstance(x,y,Date)){return _isEqual(+x,+y);}let xKeys=_ownKeys(x);let yKeys=_ownKeys(y);if(xKeys.length!==yKeys.length){return false;}if(xKeys.length===0){return true;}return xKeys.every((key)=>isDeepStrictEqual(x[key],y[key]));}return false;}function isEmptyValue(v){if(v==null||v!==v){return true;}if(Array.isArray(v)||v instanceof Int8Array||v instanceof Uint8Array||v instanceof Uint8ClampedArray||v instanceof Int16Array||v instanceof Uint16Array||v instanceof Int32Array||v instanceof Uint32Array||("Float16Array" in window?v instanceof Float16Array:false)||v instanceof Float32Array||v instanceof Float64Array||v instanceof BigInt64Array||v instanceof BigUint64Array||typeof v === "string"||v instanceof String){return v.length===0;}if(v instanceof Map||v instanceof Set){return v.size===0;}if(v instanceof ArrayBuffer||v instanceof DataView){return v.byteLength===0;}try{for(let _item of v){return false;}}catch(_e){}if(typeof v==="object"){let vKeys=[...Object.getOwnPropertyNames(v),...Object.getOwnPropertySymbols(v)];if(vKeys.length===0){return true;}if(vKeys.length===1&&vKeys[0]==="length"&&v.length===0){return true;}}return false;}
const isProxy=(O)=>Boolean(O.__isProxy);
const isTruthy=(v)=>Boolean(v);
const isFalsy=(v)=>!v;
const isAsyncGeneratorFn=(v)=>(Object.getPrototypeOf(v).constructor===Object.getPrototypeOf(async function*(){}).constructor);
const isConstructorFn=(v)=>(typeof v==="function"&&typeof v.prototype==="object");
const isClass=(v)=>(typeof v==="function"&&typeof v.prototype==="object");
const isPlainObject=(v)=>(v!=null&&typeof v==="object"&&(Object.getPrototypeOf(v)===Object.prototype||Object.getPrototypeOf(v)===null));
const isEmptyMap=(v)=>(v instanceof Map&&v.size===0);
const isEmptySet=(v)=>(v instanceof Set&&v.size===0);
function isEmptyIterator(it){for(let _item of it){return false;}return true;}
const isDataView=(v)=>(v instanceof DataView);
const isPromise=(v)=>(v instanceof Promise||(v!=null&&typeof v==="object"&&typeof v.then==="function"&&typeof v.catch ==="function"));
function isSameObject(o1,o2){if(o1.constructor!==o2.constructor){return false;}var a1=Object.keys(o1).sort(),a2=Object.keys(o2).sort();if(a1.length===a2.length){for(var i=0,l=a1.length;i<l;i++){if(a1[i]!==a2[i]||o1[a1[i]]!==o2[a1[i]]){return false;}}return true;}return false;}
const isSameArray=(a,b)=>(Array.isArray(a)&&Array.isArray(b)&&(a.length===b.length)&&a.every((v,i)=>v===b[i]));
function isSameMap(m1,m2){if(m1 instanceof Map&&m2 instanceof Map&&m1.size===m2.size){for(const item of m1.keys()){if(m1.get(item)!==m2.get(item)){return false;}}return true;}return false;}
function isSameSet(s1,s2){if(s1 instanceof Set&&s2 instanceof Set&&s1.size===s2.size){for(const item of s1){if(!s2.has(item)){return false;}}return true;}return false;}
const isSameIterator=([...a1],[...a2])=>(a1.length===a2.length&&a1.every((v,i)=>v===a2[i]));
const isString=(v)=>(typeof v==="string");
const isChar=(v)=>(typeof v==="string"&&(v.length===1||Array.from(v).length===1));
const isNumber=(v)=>(typeof v==="number");
const isNumeric=(v)=>(((typeof v==="number"||typeof v==="bigint")&& v===v)?true:(!isNaN(parseFloat(v)))&&isFinite(v));
const isBoolean=(v)=>(typeof v==="boolean");
const isObject=(v)=>(v!=null&&(typeof v==="object"||typeof v==="function"));
const isEmptyObject=(O)=>(O!=null&&typeof O==="object"&&Object.getOwnPropertyNames(O).length===0&&Object.getOwnPropertySymbols(O).length===0);
const isFunction=(O)=>(typeof v==="function"||Object.prototype.toString.call(O)==="[object Function]");
const isCallable=(O)=>((O!=null&&["object","function"].includes(typeof O))?(typeof O.call==="function"):false);
const isEmptyArray=(v)=>(Array.isArray(v)&&v.length===0);
const isArraylike=(v)=>((typeof v==="object"||typeof v==="string")&&v!=null&&typeof v.length==="number"&&v.length>=0&&v.length%1===0);
const isNull=(v)=>(v===null);
const isUndefined=(v)=>(v===undefined);
const isNullOrUndefined=(v)=>(v==null);
const isNil=(v)=>(v==null||v!==v);
const isPrimitive=(v)=>(v==null||(typeof v!=="object"&&typeof v!=="function"));
const isSymbol=(v)=>(typeof v==="symbol");
const isMap=(v)=>(v instanceof Map);
const isSet=(v)=>(v instanceof Set);
const isWeakMap=(v)=>(v instanceof WeakMap);
const isWeakSet=(v)=>(v instanceof WeakSet);
const isIterator=(v)=>("Iterator" in window ?(v instanceof Iterator):(v!=null&&typeof v==="object"&&typeof v.next==="function"));
const isDate=(v)=>(v instanceof Date);
const isRegexp=(v)=>(v instanceof RegExp);
const isElement=(v)=>(v!=null&&typeof v==="object"&&v.nodeType===1);
const isIterable=(v)=>(v!=null&&typeof v[Symbol.iterator]==="function");
const isBigInt=(v)=>(typeof v==="bigint");
const isArrayBuffer=(v)=>(v instanceof ArrayBuffer);
const isTypedArray=(v)=>(v instanceof Int8Array||v instanceof Uint8Array||v instanceof Uint8ClampedArray||v instanceof Int16Array||v instanceof Uint16Array||v instanceof Int32Array||v instanceof Uint32Array||("Float16Array" in window?v instanceof Float16Array:false)||v instanceof Float32Array||v instanceof Float64Array||v instanceof BigInt64Array||v instanceof BigUint64Array);
const isGeneratorFn=(v)=>(Object.getPrototypeOf(v).constructor===Object.getPrototypeOf(function*(){}).constructor);
const isAsyncFn=(v)=>(Object.getPrototypeOf(v).constructor===Object.getPrototypeOf(async function(){}).constructor);
/** Cookie API **/
function setCookie(name,value,hours=8760,path="/",domain,secure,SameSite="Lax",HttpOnly){if(typeof name==="object"){var settings=name;name=settings.name;value=settings.value;hours=settings.hours||8760;path=settings.path||"/";domain=settings.domain;secure=settings.secure;SameSite=settings.SameSite||"Lax";HttpOnly=settings.HttpOnly;}var expire=new Date();expire.setTime(expire.getTime()+(Math.round(hours*60*60*1000)));document.cookie=encodeURIComponent(name)+"="+encodeURIComponent(value)+"; expires="+expire.toUTCString()+"; path="+path+(domain?"; domain="+domain:"")+(secure?"; secure":"")+(typeof SameSite==="string"&&SameSite.length?"; SameSite="+SameSite:"")+(HttpOnly?"; HttpOnly":"")+";";}
function getCookie(name){if(document.cookie.length!==0){var r={},a=document.cookie.split(";");for(var i=0,l=a.length;i<l;i++){var e=a[i].trim().split("=");r[decodeURIComponent(e[0])]=decodeURIComponent(e[1]);}return (name?(r[name]?r[name]:null):r);}return (name?null:{});}
const hasCookie=(n)=>(document.cookie.includes(encodeURIComponent(n)+"="));
function removeCookie(name,path="/",domain,secure,SameSite="Lax",HttpOnly){if(typeof name==="object"){var settings=name;name=settings.name;path=settings.path||"/";domain=settings.domain;secure=settings.secure;SameSite=settings.SameSite||"Lax";HttpOnly=settings.HttpOnly;}var r=(document.cookie.includes(encodeURIComponent(name)+"="));document.cookie=encodeURIComponent(name)+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT"+"; path="+path+(domain?"; domain="+domain:"")+(secure?"; secure":"")+(typeof SameSite==="string"&&SameSite.length?"; SameSite="+SameSite:"")+(HttpOnly?"; HttpOnly":"")+";";return r;}
function clearCookies(path="/",domain,secure,SameSite="Lax",HttpOnly){if(typeof path==="object"){var settings=path;path=settings.path||"/";domain=settings.domain;secure=settings.secure;SameSite=settings.SameSite||"Lax";HttpOnly=settings.HttpOnly;}if(document.cookie.length!==0){var a=document.cookie.split(";");for(var i=0,l=a.length;i<l;i++){document.cookie=encodeURIComponent(a[i].trim().split("=")[0])+"=; expires=Thu, 01 Jan 1970 00:00:01 GMT"+"; path="+path+(domain?"; domain="+domain:"")+(secure?"; secure":"")+(typeof SameSite==="string"&&SameSite.length?"; SameSite="+SameSite:"")+(HttpOnly?"; HttpOnly":"")+";";}}}
/** Collections API **/
function unique(it,resolver){if(resolver==null){return [...new Set(it)];}if(typeof resolver==="string"){return Array.from(it).reduce(function(acc,el){if(acc.every((e)=>e[resolver]!==el[resolver])){acc.push(el);}return acc;},[]);}if(typeof resolver==="function"){let cache=new Map();for(let item of it){let key=resolver(item);if(!cache.has(key)){cache.set(key,item);}}return [...cache.values()];}}
function count(it,fn){let i=0,r=0;for(let item of it){if(fn(item,i++)){r++;}}return r;}
function arrayDeepClone([...a]){const _ADC=(v)=>(Array.isArray(v)?Array.from(v,_ADC):v);return _ADC(a);}
function arrayCreate(l=0){l=Number(l);if(1/l===-Infinity){l=0;}if(l>(Math.pow(2,32)-1)){throw new RangeError("celestra.arrayCreate(); error: Invalid array length");}return Array(l);}
const initial=([...a])=>a.slice(0,-1);
function shuffle([...a]){for(let i=a.length-1;i>0;i--){let j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}return a;}
const partition=([...a],fn)=>[a.filter(fn),a.filter((e,i,a)=>!(fn(e,i,a)))];
const arrayUnion=(...a)=>[...new Set(a.map(([...e])=>e).flat())];
const arrayIntersection=([...a],[...b])=>a.filter((v)=>b.indexOf(v)>-1).filter((e,i,arr)=>arr.indexOf(e)===i);
const arrayDifference=([...a],[...b])=>a.filter((v)=>b.indexOf(v)===-1).filter((e,i,arr)=>arr.indexOf(e)===i);
const arraySymmetricDifference=([...a],[...b])=>a.filter((v)=>b.indexOf(v)===-1).concat(b.filter((v)=>a.indexOf(v)===-1)).filter((e,i,arr)=>arr.indexOf(e)===i);
const setUnion=(...a)=>new Set(a.map(([...e])=>e).flat());
const setIntersection=([...a],b)=>new Set(a.filter((v)=>b.has(v)));
const setDifference=([...a],b)=>new Set(a.filter((v)=>!(b.has(v))));
const setSymmetricDifference=(a,b)=>new Set([...a].filter((v)=>!(b.has(v))).concat([...b].filter((v)=>!(a.has(v)))));
const isSuperset=([...sup],[...sub])=>sub.every((v)=>sup.indexOf(v)>-1);
const min=(...a)=>a.reduce((acc,v)=>(v<acc?v:acc),a[0]);
const max=(...a)=>a.reduce((acc,v)=>(v>acc?v:acc),a[0]);
const arrayRepeat=(v,n=100)=>Array(n).fill(v);
const arrayCycle=([...a],n=100)=>Array(n).fill(a).flat();
const arrayRange=(s=0,e=99,st=1)=>Array.from({length:(e-s)/st+1},(_v,i)=>s+(i*st));
function zip(...a){a=a.map((v)=>Array.from(v));let r=[],i,j,l=a.length,min=a[0].length,item;for(item of a){if(item.length<min){min=item.length;}}for(i=0;i<min;i++){item=[];for(j=0;j<l;j++){item.push(a[j][i]);}r.push(item);}return r;}
function unzip([...a]){a=a.map(([...v])=>v);let r=[],i,j,l1=a[0].length,l2=a.length;for(i=0;i<l1;i++){r.push([]);}for(i=0;i<l1;i++){for(j=0;j<l2;j++){r[i].push(a[j][i]);}}return r;}
function zipObj([...a1],[...a2]){var r=[],i,l=(a1.length<a2.length?a1.length:a2.length);for(i=0;i<l;i++){r.push([a1[i],a2[i]]);}return Object.fromEntries(r);}
const arrayUnique=(a)=>[...new Set(a)];
const arrayAdd=(a,v)=>(a.indexOf(v)===-1)?!!a.push(v):false;
function arrayClear(a){a.length=0;return a;}
function arrayRemove(a,v,all=false){var found=a.indexOf(v)>-1;if(!all){var pos=a.indexOf(v);if(pos>-1){a.splice(pos,1);}}else{var pos=-1;while((pos=a.indexOf(v))>-1){a.splice(pos,1);}}return found;}
function arrayRemoveBy(a,fn,all=false){var found=a.findIndex(fn)>-1;if(!all){var pos=a.findIndex(fn);if(pos>-1){a.splice(pos,1);}}else{var pos=-1;while((pos=a.findIndex(fn))>-1){a.splice(pos,1);}}return found;}
function arrayMerge(t,...a){t.push(...[].concat(...a));return t;}
function*iterRange(s=0,st=1,e=Infinity){let i=s;while(i<=e){yield i;i+=st;}}
function*iterCycle([...a],n=Infinity){let i=0;while(i<n){yield* a;i++;}}
function*iterRepeat(v,n=Infinity){let i=0;while(i<n){yield v;i++;}}
function*takeWhile(it,fn){for(let item of it){if(!fn(item)){break;}yield item;}}
function*dropWhile(it,fn){let d=true;for(let item of it){if(d&&!fn(item)){d=false;}if(!d){yield item;}}}
function*take(it,n=1){let i=n;for(let item of it){if(i<=0){break;}yield item;i--;}}
function*drop(it,n=1){let i=n;for(let item of it){if(i<1){yield item;}else{i--;}}}
function forEach(it,fn){let i=0;for(let item of it){fn(item,i++);}}
function forEachRight([...a],fn){let i=a.length;while(i--){fn(a[i],i);}}
function*map(it,fn){let i=0;for(let item of it){yield fn(item,i++);}}
function*filter(it,fn){let i=0;for(let item of it){if(fn(item,i++)){yield item;}}}
function*reject(it,fn){let i=0;for(let item of it){if(!fn(item,i++)){yield item;}}}
function*slice(it,begin=0,end=Infinity){let i=0;for(let item of it){if(i>=begin&&i<=end){yield item;}else if(i>end){return;}i++;}}
function*tail(it){let first=true;for(let item of it){if(!first){yield item;}else{first=false;}}}
function item(it,p){let i=0;for(let item of it){if(i++===p){return item;}}}
function nth(it,p){let i=0;for(let item of it){if(i++===p){return item;}}}
function size(it){let i=0;for(let _item of it){i++;}return i;}
function first(it){for(let item of it){return item;}}
function head(it){for(let item of it){return item;}}
function last(it){let item;for(item of it){}return item;}
function*reverse([...a]){var i=a.length;while(i--){yield a[i];}}
const sort=([...a],ns)=>a.sort(ns?(x,y)=>x-y:undefined);
function includes(it,v){for(let item of it){if(item===v){return true;}}return false;}
function contains(it,v){for(let item of it){if(item===v){return true;}}return false;}
function find(it,fn){let i=0;for(let item of it){if(fn(item,i++)){return item;}}}
function findLast(it,fn){let i=0,r;for(let item of it){if(fn(item,i++)){r=item;}}return r;}
function every(it,fn){let i=0;for(let item of it){if(!fn(item,i++)){return false;}}if(i===0){return false;}return true;}
function some(it,fn){let i=0;for(let item of it){if(fn(item,i++)){return true;}}return false;}
function none(it,fn){let i=0;for(let item of it){if(fn(item,i++)){return false;}}if(i===0){return false;}return true;}
const takeRight=([...a],n=1)=>a.reverse().slice(0,n);
function*takeRightWhile([...a],fn){let i=0;for(let item of a.reverse()){if(fn(item,i++)){yield item;}else{break;}}}
const dropRight=([...a],n=1)=>a.reverse().slice(n);
function* dropRightWhile([...a],fn){let d=true,i=0;for(let item of a.reverse()){if(d&&!fn(item,i++)){d=false;}if(!d){yield item;}}}
function*concat(){for(let item of arguments){if(typeof item[Symbol.iterator]==="function"||("Iterator" in window?(item instanceof Iterator):(typeof item==="object"&&typeof item.next==="function"))){yield* item;}else{yield item;}}}
function reduce(it,fn,iv){let acc=iv,i=0;for(let item of it){if(i===0&&acc===undefined){acc=item;}else{acc=fn(acc,item,i++);}}return acc;}
function*enumerate(it,offset=0){let i=offset;for(let item of it){yield [i++,item];}}
function*entries(it,offset=0){let i=offset;for(let item of it){yield [i++,item];}}
function*flat(it){for(let item of it){if(typeof item[Symbol.iterator]==="function"||("Iterator" in window ? (item instanceof Iterator):(typeof item==="object"&&typeof item.next==="function"))){yield* item;}else{yield item;}}}
function join(it,sep=","){sep=String(sep);let r="";for(let item of it){r+=sep+item;}return r.slice(sep.length);}
const withOut=([...a],[...fl])=>a.filter((e)=>fl.indexOf(e)===-1);
/** Abstract API **/
function deletePropertyOrThrow(O,P){delete O[P];if(P in O){throw new Error("Object Property delete error: "+O+"["+P+"]");}}
const isLessThan=(v1,v2,leftFirst=true)=>(leftFirst?(v1<v2):(v1>v2));
function requireObjectCoercible(O){if(O==null){throw new TypeError(Object.prototype.toString.call(O)+" is not coercible to Object.");}return O;}
function getInV(O,P){if(O==null){throw TypeError("celestra.getInV(); error: "+O+"["+P+"]");}return Object(O)[P];}
const getIn=(O,P)=>O[P];
function setIn(O,P,V,Throw=false){O[P]=V;if(O[P]!==V&&Throw){throw new TypeError("celestra.setIn(); error: "+O+"["+P+"]");}return (O[P]===V);}
const hasIn=(O,P)=>(P in O);
function toPrimitive(O,hint="default"){const _apply=Function.prototype.call.bind(Function.prototype.apply);const _isPrimitive=(v)=>((typeof v!=="object"&&typeof v!=="function")||v===null);if(_isPrimitive(O)){return O;}let method=O[Symbol.toPrimitive];if(method!=null){let r=_apply(method,O,[]);if(_isPrimitive(r)){return r;}}else{for(let item of(hint==="string"?["toString","valueOf"]:["valueOf","toString"])){method=O[item];if(typeof method==="function"){let r=_apply(method,O,[]);if(_isPrimitive(r)){return r;}}}}throw new TypeError("celestra.toPrimitive(): Cannot convert object to primitive value");}
const isSameValue=(v1,v2)=>((v1===v2)?(v1!==0||1/v1===1/v2):(v1!==v1&&v2!==v2));
const isSameValueZero=(v1,v2)=>(v1===v2||(v1!==v1&&v2!==v2));
function isSameValueNonNumber(x,y){if(typeof x==="number"||typeof y==="number"){throw new TypeError("isSameValueNonNumber(); TypeError: x and y both have to be non number");}return (x===y);}
const createMethodProperty=(O,P,V)=>Object.defineProperty(O,P,{value:V,writable:true,enumerable:false,configurable:true});
function createMethodPropertyOrThrow(O,P,V){Object.defineProperty(O,P,{writable:true,enumerable:false,configurable:true,value:V});if(O[P]!==V){throw new Error("celestra.createMethodPropertyOrThrow(); error: "+O+"["+P+"]");}return O;}
const createDataProperty=(O,P,V)=>Object.defineProperty(O,P,{value:V,writable:true,enumerable:true,configurable:true});
function createDataPropertyOrThrow(O,P,V){Object.defineProperty(O,P,{writable:true,enumerable:true,configurable:true,value:V});if(O[P]!==V){throw new Error("celestra.createDataPropertyOrThrow(); error: "+O+"["+P+"]");}return O;}
const toArray=(O)=>(Array.isArray(O)?O:Array.from(O));
/** Math API **/
const isFloat=(v)=>(typeof v==="number"&&v===v&&!!(v%1));
function toInteger(v){v=((v=Math.trunc(+v))!==v||v===0)?0:v;return Math.min(Math.max(v,-(Math.pow(2,53)-1)),Math.pow(2,53)-1);}
const toIntegerOrInfinity=(v)=>((v=Math.trunc(+v))!==v||v===0)?0:v;
const sum=(...a)=>(a.every((v)=>typeof v==="number")?Math.sumPrecise(a):a.slice(1).reduce((acc,v)=>acc+v,a[0]));
const avg=(...a)=>Math.sumPrecise(a)/a.length;
const product=(f,...a)=>a.reduce((acc,v)=>acc*v,f);
function clamp(val,min=-9007199254740991,max=9007199254740991){function _normalize(v){if(typeof v!=="bigint"&&typeof v!=="number"){v=Number(v);}if(v===-Infinity){return -9007199254740991;}if(v===Infinity){return 9007199254740991;}if(v===0){return 0;}return v;}val=_normalize(val);min=_normalize(min);max=_normalize(max);if(val!==val){return val;}if(min!==min||max!==max){throw new RangeError("clamp();RangeError: minimum and maximum should not to be NaN");}if(min>max){throw new RangeError("clamp();RangeError: minimum should be lower than maximum");}return (val<min)?min:((val>max)?max:val);}
function minmax(val,min=-9007199254740991,max=9007199254740991){function _normalize(v){if(typeof v!=="bigint"&&typeof v!=="number"){v=Number(v);}if(v===-Infinity){return -9007199254740991;}if(v===Infinity){return 9007199254740991;}if(v===0){return 0;}return v;}val=_normalize(val);min=_normalize(min);max=_normalize(max);if(val!==val){return val;}if(min!==min||max!==max){throw new RangeError("clamp();RangeError: minimum and maximum should not to be NaN");}if(min>max){throw new RangeError("clamp();RangeError: minimum should be lower than maximum");}return (val<min)?min:((val>max)?max:val);}
function isEven(v){var r=v%2;if(r===r){return r===0;}return false;}
function isOdd(v){var r=v%2;if(r===r){return r!==0;}return false;}
const toInt8=(v)=>((v=Math.min(Math.max(-128,Math.trunc(Number(v))),127))===v)?v:0;
const toUInt8=(v)=>((v=Math.min(Math.max(0,Math.trunc(Number(v))),255))===v)?v:0;
const toInt16=(v)=>((v=Math.min(Math.max(-32768,Math.trunc(Number(v))),32767))===v)?v:0;
const toUInt16=(v)=>((v=Math.min(Math.max(0,Math.trunc(Number(v))),65535))===v)?v:0;
const toInt32=(v)=>((v=Math.min(Math.max(-2147483648,Math.trunc(Number(v))),2147483647))===v)?v:0;
const toUInt32=(v)=>((v=Math.min(Math.max(0,Math.trunc(Number(v))),4294967295))===v)?v:0;
const toBigInt64=(v)=>BigInt(typeof v==="bigint"?(v>Math.pow(2,63)-1?Math.pow(2,63)-1:v<Math.pow(-2,63)?Math.pow(-2,63):v):((v=Math.min(Math.max(Math.pow(-2,63),Math.trunc(Number(v))),Math.pow(2,63)-1))===v)?v:0);
const toBigUInt64=(v)=>BigInt(typeof v==="bigint"?(v>Math.pow(2,64)-1?Math.pow(2,64)-1:v<0?0:v):((v=Math.min(Math.max(0,Math.trunc(Number(v))),Math.pow(2,64)-1))===v)?v:0);
const toFloat32=(v)=>((v=Math.min(Math.max(-3.4e38,Number(v)),3.4e38))===v)?v:0;
const isInt8=(v)=>(Number.isInteger(v)?(v>=-128&&v<=127):false);
const isUInt8=(v)=>(Number.isInteger(v)?(v>=0&&v<=255):false);
const isInt16=(v)=>(Number.isInteger(v)?(v>=-32768&&v<=32767):false);
const isUInt16=(v)=>(Number.isInteger(v)?(v>=0&&v<=65535):false);
const isInt32=(v)=>(Number.isInteger(v)?(v>=-2147483648&&v<=2147483647):false);
const isUInt32=(v)=>(Number.isInteger(v)?(v>=0&&v<=4294967295):false);
const isBigInt64=(v)=>(typeof v==="bigint"?(v>=Math.pow(-2,63)&&v<=Math.pow(2,63)-1):false);
const isBigUInt64=(v)=>(typeof v==="bigint"?(v>=0&&v<=Math.pow(2,64)-1):false);
const toFloat16=(v)=>((v=Math.min(Math.max(-65504,Number(v)),65504))===v)?v:0;
const isFloat16=(v)=>((typeof v==="number"&&v===v)?(v>=-65504&&v<=65504):false);
const signbit=(v)=>(((v=Number(v))!==v)?false:((v<0)||Object.is(v,-0)));
function randomInt(i=100,a){if(a==null){a=i;i=0;}i=Math.ceil(Number(i));return Math.floor(Math.random()*(Math.floor(Number(a))-i+1)+i);}
function randomFloat(i=100,a){if(a==null){a=i;i=0;}var r=(Math.random()*(a-i+1))+i;return r>a?a:r;}
const inRange=(v,min,max)=>(v>=min&&v<=max);
/** undocumented functions **/
/* Please don't use these in production! */
const _apply=Function.prototype.call.bind(Function.prototype.apply);
const _call=Function.prototype.call.bind(Function.prototype.call);
const _forEach=Function.prototype.call.bind(Array.prototype.forEach);
const _map=Function.prototype.call.bind(Array.prototype.map);
const _slice=Function.prototype.call.bind(Array.prototype.slice);
/** object header **/
const VERSION="Celestra v5.7.4 min";
function noConflict(){window.CEL=celestra.__prevCEL__;return celestra; }
const celestra={/** object header **/ VERSION, noConflict, /** Core API **/ BASE16, BASE32, BASE36, BASE58, BASE62, WORDSAFEALPHABET, deleteOwnProperty, toObject, createPolyfillMethod, createPolyfillProperty, randomUUIDv7, delay, sleep, randomBoolean, b64Encode, b64Decode, javaHash, getUrlVars, obj2string, classof, getType, extend, sizeIn, forIn, filterIn, popIn, unBind, bind, constant, identity, noop, T, F, nanoid, timestampID, /** Assertion API **/ assertType, assertNotType, assert, assertTrue, assertFalse, assertEqual, assertStrictEqual, assertNotEqual, assertNotStrictEqual, assertDeepEqual, assertNotDeepStrictEqual, assertNotDeepEqual, assertDeepStrictEqual, /** String API **/ strTruncate, strPropercase, strTitlecase, strCapitalize, strUpFirst, strDownFirst, strReverse, strCodePoints, strFromCodePoints, strAt, strSplice, strHTMLRemoveTags, strHTMLEscape, strHTMLUnEscape, /** DOM API **/ qsa, qs, domReady, domCreate, domToElement, domGetCSS, domSetCSS, domFadeIn, domFadeOut, domFadeToggle, domHide, domShow, domToggle, domIsHidden, domSiblings, domSiblingsPrev, domSiblingsLeft, domSiblingsNext, domSiblingsRight, importScript, importStyle, form2array, form2string, getDoNotTrack, getLocation, createFile, getFullscreen, setFullscreenOn, setFullscreenOff, domGetCSSVar, domSetCSSVar, domScrollToTop, domScrollToBottom, domScrollToElement, domClear, /** AJAX API **/ getText, getJson, ajax, /** Type API **/ toPrimitiveValue, isPropertyKey, toPropertyKey, isIndex, isLength, toIndex, toLength, type, isSameClass, isSameType, isSameInstance, isCoercedObject, isDeepStrictEqual, isEmptyValue, isProxy, isTruthy, isFalsy, isAsyncGeneratorFn, isConstructorFn, isClass, isPlainObject, isEmptyMap, isEmptySet, isEmptyIterator, isDataView, isPromise, isSameObject, isSameArray, isSameMap, isSameSet, isSameIterator, isString, isChar, isNumber, isNumeric, isBoolean, isObject, isEmptyObject, isFunction, isCallable, isEmptyArray, isArraylike, isNull, isUndefined, isNullOrUndefined, isNil, isPrimitive, isSymbol, isMap, isSet, isWeakMap, isWeakSet, isIterator, isDate, isRegexp, isElement, isIterable, isBigInt, isArrayBuffer, isTypedArray, isGeneratorFn, isAsyncFn, /** Cookie API **/ setCookie, getCookie, hasCookie, removeCookie, clearCookies, /** Collections API **/ unique, count, arrayDeepClone, arrayCreate, initial, shuffle, partition, arrayUnion, arrayIntersection, arrayDifference, arraySymmetricDifference, setUnion, setIntersection, setDifference, setSymmetricDifference, isSuperset, min, max, arrayRepeat, arrayCycle, arrayRange, zip, unzip, zipObj, arrayUnique, arrayAdd, arrayClear, arrayRemove, arrayRemoveBy, arrayMerge, iterRange, iterCycle, iterRepeat, takeWhile, dropWhile, take, drop, forEach, forEachRight, map, filter, reject, slice, tail, item, nth, size, first, head, last, reverse, sort, includes, contains, find, findLast, every, some, none, takeRight, takeRightWhile, dropRight, dropRightWhile, concat, reduce, enumerate, entries, flat, join, withOut, /** Abstract API **/ deletePropertyOrThrow, isLessThan, requireObjectCoercible, getInV, getIn, setIn, hasIn, toPrimitive, isSameValue, isSameValueZero, isSameValueNonNumber, createMethodProperty, createMethodPropertyOrThrow, createDataProperty, createDataPropertyOrThrow, toArray, /** Math API **/ isFloat, toInteger, toIntegerOrInfinity, sum, avg, product, clamp, minmax, isEven, isOdd, toInt8, toUInt8, toInt16, toUInt16, toInt32, toUInt32, toBigInt64, toBigUInt64, toFloat32, isInt8, isUInt8, isInt16, isUInt16, isInt32, isUInt32, isBigInt64, isBigUInt64, toFloat16, isFloat16, signbit, randomInt, randomFloat, inRange, /** undocumented functions **/ _apply, _call, _forEach, _map, _slice};
if(typeof window!=="undefined"){window.celestra = celestra;celestra.__prevCEL__ = window.CEL;window.CEL = celestra;}
}(window,document));